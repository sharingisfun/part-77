{"title":"Cudaminer 2013-07-13 (litecoin geforce miner)","uid":8921109,"size":8210458,"categoryP":"applications","categoryS":"windows","magnet":"?xt=urn:btih:c5d4a3a76d0f56c1c9438f6681c577ad8431d205&amp;dn=Cudaminer+2013-07-13+%28litecoin+geforce+miner%29&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":1,"uploader":"chroman23","files":5,"time":1379257239,"description":"\nCudaMiner release July 13th 2013 - alpha release\n-------------------------------------------------\n\nthis is a CUDA accelerated mining application for litecoin only.\nThe most computationally heavy parts of the scrypt algorithm (the\nSalsa 20/8 iterations) are run on the GPU.\n\nYou should see a notable speed-up compared to OpenCL based miners.\nSome numbers from my testing:\n\nGTX 260:    44  kHash/sec  (OpenCL: 20)\nGTX 640:    39  kHash/sec\nGTX 460:   101  kHash/sec\nGTX 560Ti: 140  kHash/sec\nGTX 660Ti: 176  kHash/sec  (OpenCL: 60-70)\n\nNOTE: Compute 1.0 through 1.3 devices seem to run faster on Windows XP\nor Linux.\n\nYour nVidia cards will now suck a little less for mining! This tool\nwill automatically use all nVidia GPUs found in your system, but the\nused device count can be limited to a lower number using the &quot;-t&quot;\noption, or even selected individually with the &quot;-d&quot; option\n\nThis code is based on the pooler cpuminer 2.3.2 release and inherits\nits command line interface and options.\n\nAdditional command line options are:\n\n--no-autotune    disables the built-in autotuning feature for\n                 maximizing CUDA kernel efficiency and uses some\n                 heuristical guesswork, which might not be optimal.\n\n--devices        [-d] gives a list of CUDA device IDs to operate on.\n                 Device IDs start counting from 0!\n\n--launch-config  [-l] specify the kernel launch configuration per device.\n                 This replaces autotune or heuristic selection.\n\n--interactive    [-i] list of flags (0 or 1) to enable interactive\n                 desktop performance on individual cards. Use this\n                 to remove lag at the cost of some hashing performance.\n                 Do not use large launch configs for devices that shall\n                 run in interactive mode - it's best to use autotune!\n\n--texture-cache  [-C] list of flags (0 or 1 or 2) to enable use of the \n                 texture cache for reading from the scrypt scratchpad.\n                 1 uses a 1D cache, whereas 2 uses a 2D texture layout.\n                 This is very experimental and may hurt performance\n                 on some cards.\n\n--single-memory  [-m] list of flags (0 or 1) to make the devices\n                 allocate their scrypt scratchpad in a single,\n                 consecutive memory block. On Windows Vista, 7/8\n                 this may lead to a smaller memory size being used.\n\n\n&gt;&gt;&gt; Example command line options, advanced use &lt;&lt;&lt;\n\ncudaminer.exe -d 0,1,2 -i 1,0,0 -l auto,S27x3,28x4 -C 0,2,1\n-o stratum+tcp://coinotron.com:3334 -O workername:password  \n\nI tell cudaminer to use devices 0,1 and 2. Because I have the monitor\nattached to device 0, I set that device to run in interactive mode so\nit is fully responsive for desktop use while mining.\n\nDevice 0 performs autotune for interactive mode because I explicitly\nset it to auto. Device 1 will use kernel launch configuration S27x3 and\ndevice 2 uses 28x4.\n\nI turn on the use of the texture cache to 2D for device 1, 1D for device\n2 and off for the other devices.\n\nThe given -o/-O settings mine on the coinotrom pool using the stratum\nprotocol.\n\n\n&gt;&gt;&gt; Additional Notes &lt;&lt;&lt;\n\nThe HMAC SHA-256 parts of scrypt are still executed on the CPU, and so\nany BitCoin mining will NOT be GPU accelerated. This tool is for LTC.\n\nThis does not support the Stratum protocol. To do stratum mining\nyou have to run a local proxy.\n\nThis code should be fine on nVidia GPUs ranging from compute\ncapability 1.1 up to compute capability 3.5. The Geforce Titan has\nreceived experimental and untested support.\n\nTo see what autotuning does, enable the debug option (-D) switch.\nYou will get a table of kHash/s for a variety of launch configurations.\nYou may only want to do this when running on a single GPU, otherwise\nthe autotuning output of multiple cards will mix.\n\n\n&gt;&gt;&gt; RELEASE HISTORY &lt;&lt;&lt;\n\n- the July 13th release adds support for the Stratum protocol,\n  by making a fresh fork of pooler's cpuminer code (and any future\n  updates of pooler's code will be easier to integrate).\n\n- the April 30th release fixes a minor problem in the CPU SHA-256\n  parallelization that might have lead to inflated CPU use.\n\n  Modified the CUDA API command issue order to get 99-100%\n  utilization out of my Kepler card on Windows.\n\n  The old &quot;S&quot; kernels have been replaced with kernels that seem\n  to slightly improve performance on Kepler cards. Just prepend\n  your previous Kepler launch config (e.g. 28x8) with an S prefix\n  to see if you get any performance gains. Works for me! ;)\n\n- the April 22th release fixes Linux 64 bit compilation and reintroduces\n  memory access optimizations in the Titan kernel.\n\n- the April 17th release fixes the texture cache feature (yay!) but\n  the even Kepler cards currently see no real benefits yet (boo!).\n\n  Ctrl-C will now also interrupt the autotuning loop, and pressing\n  Ctrl-C a second time will always result in a hard exit.\n\n  The Titan kernel was refactored into a write-to-scratchpad phase and\n  into a read-from-scratchpad case using const __restrict__ pointers,\n  which makes the Titan automatically use the 48kb texture cache in each\n  SMX during the read phase. No need to use the -C flag with Titan.\n\n  CPU utilization seems lower than in previous releases, especially in\n  interactive mode. In fact I barely see cudaminer.exe consuming CPU\n  resources all ;)\n\n- the April 14th release lowers the CPU use dramatically. I also fixed the\n  Windows specific driver crash on CTRL-C problem. You still should not\n  click the close button on the DOS box, as this does not leave the\n  program enough time for cleanly shutting down.\n\n- the April 13th release turns the broken texture cache feature OFF by\n  default, as now also seems detrimental to performance. So what remains of\n  yesterday's update is just the interactive mode and the restored\n  Geforce Titan support.\n\n  I also added a validation of GPU results by the CPU.\n\n- the April 12th update boosts Kepler performance by 15-20% by enabling\n  the texture cache on these devices to do its scrypt scratchpad lookups.\n  You can also override the use of the texture cache from command line.\n\n  I also add an interactive mode for cards that drive monitors, so you\n  can be almost lag-free when using the desktop. It costs some performance\n  though. In interactive mode autotuning, smaller kernel launch configs\n  are selected. Try not to override this with huge launch configs, or the\n  effect of interactive mode would be negated.  \n\n  Put Titan support back to its original state. I suspect that a CUDA\n  compiler bug made the kernel crash when I applied the same optimizations\n  that work so nicely on Compute 1.0 trough 3.0 devices.\n\n- the April 10th update speeds up the CUDA kernels SIGNIFICANTLY by using\n  larger memory transactions (yay!!!)\n\n- the April 9th update fixes an autotune problem and adds Linux autotools\n  support.\n\n- the April 8th release adds CUDA kernel optimizations that may get up to\n  20% more kHash out of newer cards (Fermi generation and later...).\n\n  It also adds UNTESTED Geforce Titan support.\n\n  I also use Microsoft's parallel patterns library to split up the CPU\n  HMAC SHA256 workload over several CPU cores. This was a limiting factor\n  for some GPUs before.\n\n- the April 6th release adds an auto-tuning feature that determines the\n  best kernel launch configuration per GPU. It takes up to a few minutes\n  while the GPU's memory and host CPU may be pegged a bit. You can disable\n  this tuning with the --no-autotune switch\n\n- April 4th initial release.\n\n\n&gt;&gt;&gt; About CUDA Kernels &lt;&lt;&lt;\n\nCUDA kernels do the computation. Which one we select and in which\nconfiguration it is run greatly affects performance. CUDA kernel\nlaunch configurations are given as a character string, e.g. S27x3\n\n                       prefix blocks x warps\n\nCurrently there is just one prefix, which is &quot;S&quot;. Later releases may\nsee the introduction of more kernel variants with using other letters.\n\nExamples:\n\ne.g. S27x3 is a launch configuration that works well on GTX 260\n      28x4 is a launch configuration that works on Geforce GTX 460\n     290x2 is a launch configuration that works on Geforce GTX 660Ti\n\nYou should wait through autotune to see what kernel is found best for\nyour current hardware configuration.\n\nThe choice between Non-Titan and Titan CUDA kernels is automatically\nmade based on your device's compute capability. Titans cost around\na thousand dollars, so you probably don't have one.\n\n\nPrefix  | Non-Titan          | Titan\n-------------------------------------------------------\n &lt;none&gt; | low shared memory  | default kernel\n        | optimized kernel   | with funnel shifter\n        |                    |\n   S    | spinlock kernel    | spinlock kernel\n        | for Kepler GPUs    | with funnel shifter\n\n\n&gt;&gt;&gt; TODO &lt;&lt;&lt;\n\nUsability Improvements:\n- add reasonable error checking for CUDA API calls\n- clean up and modularize the CUDA code better\n- bring back to old &quot;special&quot; kernel for compute 1.x devices\n- add failover support\n\nFurther Optimization:\n- consider use of some inline assembly in CUDA\n- investigate benefits of a LOOKUP_GAP implementation\n- optimization for compute 3.5 devices like newer GT640 cards\n  and the Geforce Titan.\n\n\n***************************************************************\nIf you find this tool useful and like to support its continued \n        development, then consider a donation in LTC.\n\n  The donation address is LKS1WDKGED647msBQfLBHV3Ls8sveGncnm\n***************************************************************\n\nSource code is included to satisfy GNU GPL V2 requirements.\n\n\nWith kind regards,\n\n   Christian Buchner ( &lt;a class=&quot;__cf_email__&quot; href=&quot;/cdn-cgi/l/email-protection&quot; data-cfemail=&quot;81c2e9f3e8f2f5e8e0efafc3f4e2e9efe4f3c1e6ece0e8edafe2eeec&quot;&gt;[email&amp;#160;protected]&lt;/a&gt;&lt;script cf-hash='f9e31' type=&quot;text/javascript&quot;&gt;\n/* &lt;![CDATA[ */!function(){try{var t=&quot;currentScript&quot;in document?document.currentScript:function(){for(var t=document.getElementsByTagName(&quot;script&quot;),e=t.length;e--;)if(t[e].getAttribute(&quot;cf-hash&quot;))return t[e]}();if(t&amp;&amp;t.previousSibling){var e,r,n,i,c=t.previousSibling,a=c.getAttribute(&quot;data-cfemail&quot;);if(a){for(e=&quot;&quot;,r=parseInt(a.substr(0,2),16),n=2;a.length-n;n+=2)i=parseInt(a.substr(n,2),16)^r,e+=String.fromCharCode(i);e=document.createTextNode(e),c.parentNode.replaceChild(e,c)}}}catch(u){}}();/* ]]&gt; */&lt;/script&gt; )\n","torrent":{"xt":"urn:btih:c5d4a3a76d0f56c1c9438f6681c577ad8431d205","amp;dn":"Cudaminer+2013-07-13+%28litecoin+geforce+miner%29","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"c5d4a3a76d0f56c1c9438f6681c577ad8431d205","infoHashBuffer":{"type":"Buffer","data":[197,212,163,167,109,15,86,193,201,67,143,102,129,197,119,173,132,49,210,5]},"announce":[],"urlList":[]}}